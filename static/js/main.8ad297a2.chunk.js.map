{"version":3,"sources":["components/cards/cards.components.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","alt","src","monster","id","name","address","city","CardList","console","log","Date","getTime","monsters","map","Search","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonster","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAQ,SAAAC,GAAK,OACtB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,QAAQC,KAA3B,YCHKC,G,MAAW,SAACT,GAGrB,OADAU,QAAQC,IAAI,MAAM,IAAIC,MAAOC,UAAW,OAAQb,GACxC,qBAAKC,UAAY,YAAjB,SACFD,EAAMc,SAASC,KAAI,SAAAX,GAAO,OACxB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,WCNnBW,G,MAAS,SAAC,GAAD,EAAEC,YAAF,IAAeC,EAAf,EAAeA,aAAf,OAClB,uBAAOjB,UAAU,SAASkB,KAAK,SAASF,YAAY,kBAAkBG,SAAUF,MCgCrEG,E,kDA9Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,gEASO,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAWc,OACzClB,QAAQC,IAAI,OAASmB,KAAKR,S,+BAGrB,IAAD,SAC4BQ,KAAKR,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACZQ,EAAkBjB,EAASkB,QAAO,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAASX,EAAYU,kBACjG,OACE,sBAAKhC,UAAY,MAAjB,UACE,8CACA,cAAC,EAAD,CAAQgB,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAC,YAAgBM,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAvBVO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ad297a2.chunk.js","sourcesContent":["import React from 'react';\nimport './cards.style.css';\n\nexport const Cards = props => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set5&size=150x250`} />\n        <h2> {props.monster.name} </h2>\n        <p> {props.monster.address.city} </p>\n    </div>\n)","import React from 'react';\nimport { Cards } from '../cards/cards.components';\nimport './card-list.style.css';\n\nexport const CardList = (props) => {\n\n    console.log(\"ts\", new Date().getTime(), \" -- \", props)\n    return (<div className = 'card-list'>\n        { props.monsters.map(monster => (\n            <Cards key={monster.id} monster={monster}></Cards>\n        ))}\n    </div>);\n}\n","import React from \"react\";\nimport './search-box.style.css';\n\nexport const Search = ({placeholder, handleChange}) => (\n    <input className='search' type=\"search\" placeholder='search monsters' onChange={handleChange}></input>\n)","import React from \"react\";\nimport './App.css';\nimport { CardList } from \"./components/card-list/card-list.components\";\nimport { Search } from \"./components/search-box/search-box.components\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n    console.log(\"App \" , this.state)\n  }\n\nrender(){\n  const { monsters, searchField } = this.state;\n  const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className = \"App\">\n        <h1>Monsters App</h1>\n        <Search placeholder='search monsters' handleChange={e => this.setState({'searchField' : e.target.value})}></Search>\n        <CardList monsters={filteredMonster}>\n        </CardList>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}